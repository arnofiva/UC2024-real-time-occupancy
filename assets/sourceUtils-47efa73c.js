import{go as d,gp as g,gl as m,gq as p,bR as h,gr as y,gs as a,aA as w}from"./index-a7c18ff0.js";import{n as _}from"./date-430969b3.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(t){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function c(n){return new b(n)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function v(n){return new q(n)}const l=new Set;function F(n,t,e,f=!1){l.clear();for(const i in e){const r=n.get(i);if(!r)continue;const o=P(r,e[i]);if(l.add(r.name),r&&(f||r.editable)){const u=d(r,o);if(u)return c(g(u,r,o));t[r.name]=o}}for(const i of n?.requiredFields??[])if(!l.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,t){let e=t;return m(n)&&typeof t=="string"?e=parseFloat(t):p(n)&&t!=null&&typeof t!="string"?e=String(t):h(n)&&typeof t=="string"&&(e=_(t)),y(e)}let s;function G(n,t){if(!n||!a(t))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(t,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-f892ec1d.js"),["./geometryEngineJSON-f892ec1d.js","./geometryEngineBase-fbe02fd6.js","./index-a7c18ff0.js","./index-a86c5357.css","./geometryEngineJSON-0c7cdf7f.js","./json-48e3ea08.js"],import.meta.url)),s}async function R(n,t){!a(n)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await j()}export{v as d,c as f,R as j,F as p,G as y};
