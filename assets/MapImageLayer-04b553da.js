import{h4 as S,hB as I,h6 as w,ar as $,as as O,at as T,au as E,h5 as P,hp as F,ho as L,ax as M,cy as f,cf as d,hC as R,hD as j,ay as g,bw as N,hE as _,hk as J,hF as U,aw as b,be as q,aj as i,ak as o,hG as v,aC as k,cm as A,aE as V,am as C,aF as z,hH as B}from"./index-ee8e5ecc.js";import{m as D,f as G,t as H}from"./SublayersOwner-5c95041b.js";import{y as Z}from"./ExportImageParameters-b7344ad3.js";import{t as K}from"./imageBitmapUtils-fff39c29.js";import{e as x}from"./sublayerUtils-a92dbf35.js";import"./QueryTask-5b042940.js";import"./infoFor3D-a657d595.js";import"./executeForIds-e1f5ddc4.js";import"./query-9198cd9f.js";import"./normalizeUtils-d9b14f9e.js";import"./normalizeUtilsCommon-2270a178.js";import"./pbfQueryUtils-c7b4903b.js";import"./pbf-99c055ee.js";import"./executeQueryJSON-d51554e8.js";import"./executeQueryPBF-0e50ace5.js";import"./floorFilterUtils-73949d2d.js";let t=class extends S(I(w(D(G($(O(T(E(P(F(L(z)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new Z({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(M).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const p=r.supportedImageFormatTypes;return p&&p.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,p,s){if(!this.loaded||!e)return;const l=e.slice().reverse().flatten(({sublayers:a})=>a&&a.toArray().reverse()).toArray();let n=!1;const m=f(s.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(m===d.PORTAL_ITEM){const a=this.createSublayersForOrigin("service").sublayers;n=x(l,a,d.SERVICE)}else if(m>d.PORTAL_ITEM){const a=this.createSublayersForOrigin("portal-item");n=x(l,a.sublayers,f(a.origin))}}const h=[],u={writeSublayerStructure:n,...s};let y=n||this.hasVisibleLayersForOrigin(m);l.forEach(a=>{const c=a.write({},u);h.push(c),y=y||a.originOf("visible")==="user"}),h.some(a=>Object.keys(a).length>1)&&(r.layers=h),y&&(r.visibleLayers=l.filter(a=>a.visible).map(a=>a.id))}createExportImageParameters(e,r,p,s){const l=s?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=s?.floors??null,this._exportImageParameters.scale=R({extent:e,width:r})*l;const n=this._exportImageParameters.toJSON(),m=!s?.rotation||this.version<10.3?{}:{rotation:-s.rotation},h=e?.spatialReference,u=j(h);n.dpi*=l;const y={};if(s?.timeExtent){const{start:a,end:c}=s.timeExtent.toJSON();y.time=a&&c&&a===c?""+a:`${a??"null"},${c??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:r+","+p,...n,...m,...y}}async fetchImage(e,r,p,s){const{data:l}=await this._fetchImage("image",e,r,p,s);return l}async fetchImageBitmap(e,r,p,s){const{data:l,url:n}=await this._fetchImage("blob",e,r,p,s);return K(l,n,s?.signal)}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:p}=await g(this.url,r),{extent:s,fullExtent:l,timeExtent:n}=p,m=s||l;return{fullExtent:m&&N.fromJSON(m),timeExtent:n&&_.fromJSON({start:n[0],end:n[1]})}}loadAll(){return J(this,e=>{e(this.allSublayers),e(this.subtables)})}serviceSupportsSpatialReference(e){return U(this,e)}async _fetchImage(e,r,p,s,l){const n={responseType:e,signal:l?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,p,s,l),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(n.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:h}=await g(m,n);return{data:h,url:m}}catch(h){throw q(h)?h:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:h})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:p}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});p&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(e==null||!this.sublayersSourceJSON[e]?.visibleLayers)}};i([o(v("dateFieldsTimeReference"))],t.prototype,"dateFieldsTimeZone",void 0),i([o({type:Boolean})],t.prototype,"datesInUnknownTimezone",void 0),i([o()],t.prototype,"dpi",void 0),i([o()],t.prototype,"gdbVersion",void 0),i([o()],t.prototype,"imageFormat",void 0),i([k("imageFormat",["supportedImageFormatTypes"])],t.prototype,"readImageFormat",null),i([o({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],t.prototype,"imageMaxHeight",void 0),i([o({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],t.prototype,"imageMaxWidth",void 0),i([o()],t.prototype,"imageTransparency",void 0),i([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],t.prototype,"isReference",void 0),i([o({json:{read:!1,write:!1}})],t.prototype,"labelsVisible",void 0),i([o({type:["ArcGISMapServiceLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1,write:!1}})],t.prototype,"popupEnabled",void 0),i([o(v("preferredTimeReference"))],t.prototype,"preferredTimeZone",void 0),i([o()],t.prototype,"sourceJSON",void 0),i([o({json:{write:{ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),i([A("sublayers",{layers:{type:[H]},visibleLayers:{type:[B]}})],t.prototype,"writeSublayers",null),i([o({type:["show","hide","hide-children"]})],t.prototype,"listMode",void 0),i([o({json:{read:!1},readOnly:!0,value:"map-image"})],t.prototype,"type",void 0),i([o(V)],t.prototype,"url",void 0),t=i([C("esri.layers.MapImageLayer")],t);const ye=t;export{ye as default};
