import{cc as Q,an as P,cd as B,aj as a,ak as l,am as v,iF as N,iE as H,m8 as G,aq as C,ao as T,aY as w,ai as E,aK as c,bo as f,e5 as x,aW as F,aV as L,aB as q,e6 as U,ax as k,aw as S,bk as V,ei as W,ej as j,aP as $,a_ as D,aQ as I,be as z,oK as X,h_ as Y,fM as K,dX as Z,aX as J}from"./index-a7c18ff0.js";import"./BuildingGroupSublayer-5b3090b0.js";import{O as ee}from"./WhereClause-2fb375e8.js";import"./BuildingComponentSublayer-0e5596e9.js";import{A as te,u as re,n as ie}from"./I3SMeshView3D-d2ec8c48.js";import{P as b,d as se,h as ne,o as ae}from"./I3SQueryFeatureStore-6a4be1a6.js";import{L as le,Z as oe,X as ue}from"./I3SUtil-e4866cc5.js";import{u as de,t as pe}from"./TemporalSceneLayerView-0b767b7c.js";import{u as he,n as ye,p as M}from"./popupUtils-3f768e23.js";import{l as ce}from"./LayerView3D-c5762523.js";import{y as ge}from"./LayerView-08f99099.js";import"./TimeOnly-53f05750.js";import"./capabilities-c607cf72.js";import"./I3SIndexInfo-db7a5202.js";import"./I3SLayerDefinitions-04834554.js";import"./Transform-8ffe3adc.js";import"./RenderTexture-194986c0.js";import"./I3SOverrides-a9e0fbcb.js";import"./I3SNode-2066c887.js";import"./I3SBinaryReader-97cc1d96.js";import"./ReactiveSet-caa9d619.js";import"./meshFeatureSet-eeb53ca1.js";import"./Mesh-e9a1b2e3.js";import"./MeshTransform-0e0c59ab.js";import"./vertexSpaceConversion-23b1184d.js";import"./External-f38772dc.js";import"./infoFor3D-a657d595.js";import"./FeatureLayerView3D-0ead1528.js";import"./FeatureLayerViewBase3D-ecc8e291.js";import"./Graphics3DGraphicsPipeline-be3f69ee.js";import"./timeSupport-59a40e3f.js";import"./projectExtentUtils-27676289.js";import"./dehydratedFeatureComparison-c46d4223.js";import"./queryForSymbologySnapping-40847708.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-0f15cd24.js";import"./optimizedFeatureQueryEngineAdapter-56b24511.js";import"./PooledRBush-9f748ba3.js";import"./quickselect-ba05d402.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-5fa22427.js";import"./normalizeUtils-611fbb09.js";import"./normalizeUtilsCommon-5dfeef52.js";import"./json-48e3ea08.js";import"./utils-16d5bcee.js";import"./utils-16334e7c.js";import"./utils-dad2ba1e.js";import"./ClassBreaksDefinition-0203bf12.js";import"./FeatureStore-7bf9e7aa.js";import"./BoundsStore-3627d398.js";import"./query-7c37c69d.js";import"./pbfQueryUtils-60aef041.js";import"./pbf-c1643914.js";import"./WorkerHandle-5dab1b29.js";import"./EventedSet-3a4a7df4.js";import"./RefreshableLayerView-7dc01a73.js";import"./SceneModification-52a57333.js";import"./persistable-43d96274.js";import"./resourceExtension-1abd8e46.js";import"./SceneLayerWorker-b9ce4e07.js";import"./makeScheduleFunction-e2d1207a.js";const A=(e,t)=>{let r=class extends Q(P(B.EventedMixin(e))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){return!!this.sublayer?.visible}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){const i=s=>s??1;return i(this.sublayer?.opacity)*i(this.parent?.fullOpacity)}canResume(){return!this.parent?.suspended&&this.view?.ready&&this.visible||!1}isUpdating(){return!1}};return a([l()],r.prototype,"sublayer",void 0),a([l()],r.prototype,"parent",void 0),a([l({readOnly:!0})],r.prototype,"suspended",null),a([l({type:Boolean,readOnly:!0})],r.prototype,"updating",null),a([l()],r.prototype,"view",void 0),a([l()],r.prototype,"visible",null),a([l()],r.prototype,"fullOpacity",null),r=a([v("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var d;(function(e){e[e.Solid=0]="Solid",e[e.WireFrame=1]="WireFrame",e[e.XRay=2]="XRay"})(d||(d={}));const O=.15,me=.5*O;function fe(e){switch(e.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:N(e.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function R(e,t){if(t==null)return e.color[3]=0,e.edgeMaterial=null,void(e.pickable=!1);switch(t.mode){case d.Solid:return;case d.WireFrame:return e.color[3]=0,e.edgeMaterial=t.edgeMaterial,void(e.pickable=!1);case d.XRay:return e.color[0]=1,e.color[1]=1,e.color[2]=1,e.color[3]*=O,e.colorMixMode=H.Replace,e.castShadows=!1,e.pickable=!1,void(e.edgeMaterial=be(e.edgeMaterial))}}function be(e){return e==null?null:(g.lastMaterial!==e&&(g.cachedMaterial=we(e),g.lastMaterial=e),g.cachedMaterial)}function we(e){const t=G(e.color);return t[3]*=me,{...e,color:t}}const g={cachedMaterial:null,lastMaterial:null};class m extends C{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(t){throw new Error("Not implemented")}queryFeatures(t,r){throw new Error("Not implemented")}queryObjectIds(t,r){throw new Error("Not implemented")}queryFeatureCount(t,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(t,r){throw new Error("Not implemented")}highlight(t){throw new Error("Not implemented")}}a([l()],m.prototype,"sublayer",void 0),a([l()],m.prototype,"availableFields",null),a([l()],m.prototype,"filter",null);let o=class extends de(pe(te(A(m)))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){return this.sublayer.popupEnabled&&he(this.sublayer,this.layerView?.view.popup?.defaultPopupTemplateEnabled)}initialize(){this._updatingHandles.add(()=>this.mergedFilter,t=>{t!=null&&b.checkSupport(t)?this._i3sFilter==null?this._i3sFilter=new b({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:r=>this._loadAsyncModule(r),addSqlFilter:(r,i)=>this.addSqlFilter(r,i,this.logError),addTimeFilter:(r,i)=>this.addTimeFilter(r,i)}):this._i3sFilter.viewFilter=t:this._i3sFilter=T(this._i3sFilter)},w),this._updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this._updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),E);const e=()=>this._filterChange();this._updatingHandles.add(()=>this.parsedDefinitionExpression,e),this._updatingHandles.add(()=>this._i3sFilter?.sortedObjectIds,e),this._updatingHandles.add(()=>this._i3sFilter?.parsedWhereClause,e),this._updatingHandles.add(()=>this.getTimeFilterDependencies(),e),this._updatingHandles.add(()=>this.mergedFilter,e),this._updatingHandles.add(()=>[this._i3sFilter?.parsedGeometry,this.filter?.spatialRelationship],()=>this._geometryFilterChange()),this._updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),E),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let r;try{r=ee.create(e,this.sublayer.fieldsIndex)}catch(n){return c.getLogger(this).error("Failed to parse filterExpression: "+n),null}if(!r.isStandardized)return c.getLogger(this).error("filterExpression is using non standard function"),null;const i=[],s=r.fieldNames;return le(s,this.sublayer.fields,{missingFields:i}),i.length>0?(c.getLogger(this).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,t]}).filter(e=>e!=null):[]}get filter(){return this._get("filter")}set filter(e){this._set("filter",b.checkSupport(e)?e:null)}isUpdating(){return super.isUpdating()||(this._i3sFilter?.updating??!1)}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,r)=>{for(const[i,s]of e)try{if(i.testFeature(t))return R(r,s)}catch(n){this.logError(n)}return R(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return f(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let r=this.requiredFields;if(e.outFields||e.layer.outFields){const i=[...e.outFields||[],...e.layer.outFields||[]];r=[...x(t,i),...r]}return f(t,r)}_createLayerGraphic(e){return new F({attributes:e,layer:this.sublayer.layer,sourceLayer:this.sublayer})}canResume(){return super.canResume()&&L(this.i3slayer.effectiveScaleRange,this.view.terrainScale)&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeaturesFromGraphics(e,t){const r=this._validateFetchPopupFeatures(t);if(r)throw r;if(e.length===0)return[];const i=[],s=[],n=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load(t):this.sublayer,y=x(this.sublayer.fieldsIndex,await ye(n,M(this.sublayer,t)));q(t);const p=new Set;for(const h of e)U(y,h,p)?s.push(h):i.push(h);return s.length===0?i:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>c.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(s,Array.from(p)).catch(h=>(k(h),s)).then(h=>i.concat(h)))}async _updateRequiredFields(){const e=f(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields,...this.filterExpressionFields]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:r}=t;return r?M(t,e)?void 0:new S("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new S("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),this._i3sFilter?.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new V(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t?.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t?.signal).then(r=>{if(!r?.features)return r;const i=this.sublayer,s=i.layer;for(const n of r.features)n.layer=s,n.sourceLayer=i;return r})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t?.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=re(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new se({layerView:this,priority:W.FEATURE_QUERY_ENGINE,spatialIndex:new ne({featureAdapter:new ae({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,r)=>this._forAllFeatures((i,s,n)=>t({id:i,index:s,meta:n}),r,ie.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:oe(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():V.from(e))}};a([l()],o.prototype,"i3slayer",null),a([l()],o.prototype,"layerView",void 0),a([l()],o.prototype,"lodFactor",null),a([l({readOnly:!0})],o.prototype,"parsedFilterExpressions",null),a([l({type:j})],o.prototype,"filter",null),a([l()],o.prototype,"_i3sFilter",void 0),a([l({type:[String],readOnly:!0})],o.prototype,"filterExpressionFields",null),a([l({type:[String],readOnly:!0})],o.prototype,"requiredFields",void 0),a([l({type:[String],readOnly:!0})],o.prototype,"availableFields",null),o=a([v("esri.views.3d.layers.BuildingComponentSublayerView3D")],o);const Fe=o;class _ extends ge{constructor(t){super(t),this.layer=null,this.sublayerViews=null}highlight(t){throw new Error("Not implemented")}}a([l()],_.prototype,"layer",void 0),a([l()],_.prototype,"sublayerViews",void 0);const _e=A(C);let u=class extends ce(_){constructor(e){super(e),this.type="building-scene-3d",this.sublayerViews=new $,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(i=>i.id===e):null,r=t!=null?t.filterBlocks?.find(i=>i.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(r=>r.id===e):null;return t?.filterBlocks?t.filterBlocks.toArray().map(r=>[r.filterExpression??"",fe(r)]):[]}get updatingProgressValue(){const e=this.sublayerViews,t=this._loadingComponents+(e?e.length:0);return e.reduce((r,i)=>r+i.updatingProgress,0)/t}get visibleAtCurrentScale(){return L(this.layer.effectiveScaleRange,this.view.terrainScale)}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(e=>e.updating)}initialize(){ue(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(e=>e.destroy()),this.sublayerViews=null),this._abortController=D(this._abortController)}_initializeSubLayerViews(e,t){const r=this,i=this.view;e.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const n=new _e({sublayer:s,view:i,parent:t});this._initializeSubLayerViews(s.sublayers,n)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const n=new Fe({sublayer:s,layerView:r,view:i,parent:t});this.sublayerViews.push(n);const y=this._pendingWhenSublayerViews.get(s);if(y){for(const p of y)p.resolve(n);this._pendingWhenSublayerViews.delete(s)}this.addHandles([I(()=>n.updating,()=>this.notifyChange("updating"),w),I(()=>n.updatingProgress,()=>this.notifyChange("updatingProgressValue"),w)])}).catch(n=>{z(n)||c.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,n)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getGraphicFromIntersectorTarget(e);return null}async fetchPopupFeaturesFromGraphics(e,t){if(e.length===0)return[];const r=X(e,n=>n.sourceLayer),i=[];for(const[n,y]of r){const p=this._findComponent(n);p!=null&&i.push(p.fetchPopupFeaturesFromGraphics(y,t))}const s=await Y(i);return q(t),s.flat()}whenGraphicBounds(e){const t=this._findComponent(e.sourceLayer);return t==null?Promise.reject():t.whenGraphicBounds(e)}getAABBFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getAABBFromIntersectorTarget(e);return null}async whenSublayerView(e){const t=this._findComponent(e);if(t!=null)return t;const r=this._pendingWhenSublayerViews.get(e),i=K();return r?r.push(i):this._pendingWhenSublayerViews.set(e,[i]),i.promise}_findComponent(e){return this.sublayerViews.find(t=>e===t.sublayer)}highlight(e){e instanceof F?e=[e]:e instanceof $&&(e=e.toArray());const t=[];if(Array.isArray(e)&&e.length>0&&e[0]instanceof F){const r=e,i=new Map;for(const s of r){let n=i.get(s.sourceLayer);n==null&&(n=[],i.set(s.sourceLayer,n)),n.push(s)}this.sublayerViews.forEach(s=>{const n=i.get(s.sublayer);n&&t.push(s.highlight(n))})}return Z(t)}get usedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.unloadedMemory,0)}};a([l()],u.prototype,"sublayerViews",void 0),a([l({readOnly:!0})],u.prototype,"filterExpression",null),a([l({readOnly:!0})],u.prototype,"filterExpressions",null),a([l(J)],u.prototype,"updatingProgress",void 0),a([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),a([l({readOnly:!0})],u.prototype,"visibleAtCurrentScale",null),u=a([v("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const Mt=u;export{Mt as default};
