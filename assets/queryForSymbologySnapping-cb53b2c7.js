import{hl as O,bh as D,hm as P,hn as E,aB as z,ho as G,hp as $,hq as B,hr as A,hh as H}from"./index-6a39f5fd.js";import{u as J}from"./elevationInfoUtils-d136536c.js";async function k(a,d,l,b,s){const{elevationProvider:f,renderCoordsHelper:i}=a,{elevationInfo:h}=d,{pointsInFeatures:w,spatialReference:u}=b,g=D.fromJSON(u),m=P(h,!0),y=await E(m,g,s);z(s);const c=[],e=new Set,t=new Set;p.spatialReference=g;const o=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of w){const I=l(n);if(I==null){for(const R of r)c.push(R.z??0);e.add(n);continue}I.isDraped&&t.add(n);const q=I.graphic.geometry;S.setFromElevationInfo(J(q,h)),S.updateFeatureExpressionInfoContext(y,I.graphic,d);for(const{x:R,y:C,z:F}of r)p.x=R,p.y=C,p.z=F??0,await G(p,j,o,0,{signal:s}),$(j,f,S,i,v),c.push(v.z)}return{elevations:c,drapedObjectIds:t,failedObjectIds:e}}const S=new B,p=O(0,0,0,D.WGS84),v=new A,j=[0,0,0];async function K(a,d,l){if(a==null||d.candidates.length===0)return x;const b=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,s=[],f=[],{renderer:i}=a,h=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?H():null,w=async(e,{graphic:t,graphics3DSymbol:o})=>{const n=await h,r=await a.getRenderingInfoAsync(t,i,n,{signal:l});return r==null?[]:o.queryForSnapping(e,g,r,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const t=u[e],{objectId:o}=t,n=typeof o=="number"?b?.get(o):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(s.push(w(t,n)),f.push(e))}if(s.length===0)return x;const m=await Promise.all(s);z(l);const y=[],c=[];for(let e=0;e<m.length;++e){const t=m[e],o=f[e];for(const n of t)y.push(n),c.push(o)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{k as c,K as r};
