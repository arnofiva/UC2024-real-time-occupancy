import{el as d,em as m,ei as p,en as h,bY as y,eo as g,ep as a,aA as w}from"./index-c0f955a7.js";import{n as I}from"./date-430969b3.js";class _{constructor(){this.code=null,this.description=null}}class b{constructor(e){this.error=new _,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function c(n){return new b(n)}class q{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function v(n){return new q(n)}const l=new Set;function F(n,e,r,f=!1){l.clear();for(const i in r){const t=n.get(i);if(!t)continue;const o=P(t,r[i]);if(l.add(t.name),t&&(f||t.editable)){const u=d(t,o);if(u)return c(m(u,t,o));e[t.name]=o}}for(const i of n?.requiredFields??[])if(!l.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,e){let r=e;return p(n)&&typeof e=="string"?r=parseFloat(e):h(n)&&e!=null&&typeof e!="string"?r=String(e):y(n)&&typeof e=="string"&&(r=I(e)),g(r)}let s;function G(n,e){if(!n||!a(e))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(e,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-3815d4bf.js"),["./geometryEngineJSON-3815d4bf.js","./index-c0f955a7.js","./index-c3d91843.css","./geometryEngineJSON-d7488e9e.js","./json-48e3ea08.js"],import.meta.url)),s}async function S(n,e){!a(n)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await j()}export{S as I,v as d,c as f,F as p,G as w};
