import{aL as p,ao as h,aw as c,aM as d,aN as u,aj as t,ak as i,am as y}from"./index-918e6eaf.js";import{l as g}from"./LayerView3D-adcc6916.js";import{m,r as b}from"./queryForSymbologySnapping-7847ab18.js";import{O as f}from"./GraphicsProcessor-ed71d799.js";import{l as v}from"./projectExtentUtils-9bbd6567.js";import{y as w}from"./LayerView-f8de230c.js";import"./Graphics3DObjectStates-b8b825d8.js";import"./optimizedFeatureQueryEngineAdapter-06df54ea.js";import"./PooledRBush-a3e37e3f.js";import"./quickselect-29156064.js";import"./popupUtils-60c34591.js";let s=class extends g(w){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.ignoresMemoryFactor=!0}initialize(){this._set("processor",new f({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.addHandles(this.layer.on("graphic-update",e=>this.processor.graphicsCore.graphicUpdateHandler(e))),this.addResolvingPromise(v(this).then(e=>this.fullExtentInLocalViewSpatialReference=e)),this.layer.internal?this.notifyChange("updating"):this.addHandles(p(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){this._updatingHandles.removeAll(),this._set("processor",h(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return!this.processor?.scaleVisibilitySuspended}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,r){return this.processor.whenGraphicBounds(e,r)}computeAttachmentOrigin(e,r){return this.processor?.computeAttachmentOrigin(e,r)}getSymbolLayerSize(e,r){return this.processor.getSymbolLayerSize(e,r)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e){return this.processor.highlight(e)}async elevationAlignPointsInFeatures(e,r){const{processor:o}=this;if(o?.graphics3DGraphics==null)throw new c("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:n}=o,l=a=>typeof a=="number"?n.get(a):void 0;return m(this.view,this.layer,l,e,r)}async queryForSymbologySnapping(e,r){return b(this.processor,e,r)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||d.SYNC}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return new u(this.usedMemory,this.loadedGraphics.length,-1,-1)}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}get test(){return{graphics3DProcessor:this.processor,loadedGraphics:this.loadedGraphics}}};t([i()],s.prototype,"loadedGraphics",null),t([i({readOnly:!0})],s.prototype,"legendEnabled",null),t([i()],s.prototype,"layer",void 0),t([i({readOnly:!0})],s.prototype,"processor",void 0),t([i({readOnly:!0})],s.prototype,"visibleAtCurrentScale",null),t([i()],s.prototype,"_slicePlaneEnabled",void 0),t([i({type:Boolean})],s.prototype,"slicePlaneEnabled",null),s=t([y("esri.views.3d.layers.GraphicsLayerView3D")],s);const H=s;export{H as default};
