import{aw as p,gR as m,gS as T,gT as v,b1 as S,a$ as L}from"./index-a7c18ff0.js";import{b as $,a as M,t as F}from"./fetchService-ce877588.js";import{s as y,a as P,o as x,u as w,t as d,c as D,n as k,i as C,e as h}from"./portalLayers-b1d5ed47.js";import{populateGroupLayer as R}from"./layersCreator-84ea09ab.js";import"./associatedFeatureServiceUtils-3dccf328.js";async function Y(t,r){const a=t.instance.portalItem;if(a?.id)return await a.load(r),E(t),t.validateItem&&t.validateItem(a),j(t,r)}function E(t){const r=t.instance.portalItem;if(!r?.type||!t.supportedTypes.includes(r.type))throw new p("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r?.type,expectedType:t.supportedTypes.join(", ")})}async function j(t,r){const a=t.instance,e=a.portalItem;if(!e)return;const{url:o,title:s}=e,n=m(e,"portal-item");if(a.type==="group")return G(a,n,t);o&&a.type!=="media"&&a.read({url:o},n);const l=new h,i=await b(t,l,r);return i&&a.read(i,n),a.resourceReferences={portalItem:e,paths:n.readResourcePaths??[]},a.type!=="subtype-group"&&a.read({title:s},n),T(a,n)}async function G(t,r,a){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:o,type:s}=e;if(s==="Group Layer"){if(!v(e,"Map"))throw new p("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return J(t)}return t.read({title:o},r),N(t,a)}async function J(t){const r=t.portalItem,a=await r.fetchData("json");if(!a)return;const e=m(r,"web-map");t.read(a,e),await R(t,a,{context:e}),t.resourceReferences={portalItem:r,paths:e.readResourcePaths??[]}}async function N(t,r){let a;const{portalItem:e}=t;if(!e)return;const o=e.type,s=r.layerModuleTypeMap;switch(o){case"Feature Service":case"Feature Collection":a=s.FeatureLayer;break;case"Stream Service":a=s.StreamLayer;break;case"Scene Service":a=s.SceneLayer;break;default:throw new p("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}const n=new h;let[l,i]=await Promise.all([a(),b(r,n)]),c=()=>l;if(o==="Feature Service"){const g=y(i)?.customParameters;i=e.url?await P(i,e.url,n):{},c=await K(i,s)||c;const I=await H(e.url,{customParameters:g,loadContext:n});return await u(t,c,i,I)}return o==="Scene Service"&&e.url&&(i=await x(e,i,n)),w(i)>0?await u(t,c,i):await O(t,c)}async function O(t,r){const{portalItem:a}=t;if(!a?.url)return;const e=await $(a.url);e&&u(t,r,{layers:e.layers?.map(d),tables:e.tables?.map(d)})}async function u(t,r,a,e){let o=a.layers||[];const s=a.tables||[];if(t.portalItem?.type==="Feature Collection"?(o.forEach((n,l)=>{n.id=l,n?.layerDefinition?.type==="Table"&&s.push(n)}),o=o.filter(n=>n?.layerDefinition?.type!=="Table")):(o.reverse(),s.reverse()),o.forEach(n=>{const l=e?.(n);if(l||!e){const i=f(t,r(n),a,n,l);t.add(i)}}),s.length){const n=await M.FeatureLayer();s.forEach(l=>{const i=e?.(l);if(i||!e){const c=f(t,n,a,l,i);t.tables.add(c)}})}}function f(t,r,a,e,o){const s=t.portalItem,n={portalItem:s.clone(),layerId:e.id};e.url!=null&&(n.url=e.url);const l=new r(n);if("sourceJSON"in l&&(l.sourceJSON=o),l.type!=="subtype-group"&&l.type!=="catalog"&&(l.sublayerTitleMode="service-name"),s.type==="Feature Collection"){const i={origin:"portal-item",portal:s.portal||S.getDefault()};l.read(e,i);const c=a.showLegend;c!=null&&l.read({showLegend:c},i)}return l}async function b(t,r,a){if(t.supportsData===!1)return;const e=t.instance,o=e.portalItem;if(!o)return;let s=null;try{s=await o.fetchData("json",a)}catch{}if(z(e)){let n=null;const l=await A(o,s,r);if((s?.layers||s?.tables)&&l>0){if(e.layerId==null){const i=D(e.type),c=i?k(s,i)[0]:y(s);c&&(e.layerId=c.id)}n=q(s,e),n&&s.showLegend!=null&&(n.showLegend=s.showLegend)}return l>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),n}return s}async function A(t,r,a){if(r?.layers&&r?.tables)return w(r);const e=L(t.url);if(!e)return 1;const o=await a.fetchServiceMetadata(e.url.path,{customParameters:y(r)?.customParameters}).catch(()=>null);return(r?.layers?.length??o?.layers?.length??0)+(r?.tables?.length??o?.tables?.length??0)}function q(t,r){const{layerId:a}=r,e=t.layers?.find(o=>o.id===a)||t.tables?.find(o=>o.id===a);return e&&B(e,r)?e:null}function z(t){return t.type!=="stream"&&"layerId"in t}function B(t,r){const a="layerType"in t&&t.layerType,{type:e}=r;return!(e==="feature"&&a||e==="catalog"&&!a||e==="oriented-imagery"&&!a||e==="subtype-group"&&!a)}async function H(t,r){const{layersJSON:a}=await F(t,r);if(!a)return null;const e=[...a.layers,...a.tables];return o=>e.find(s=>s.id===o.id)}async function K(t,r){const{layers:a}=t;if(!a?.length)return;const e=new Set,o=[];for(const{layerType:l}of a){const i=l??"FeatureLayer";if(e.has(i))continue;e.add(i);const c=r[C(i)];o.push(c())}const s=await Promise.all(o),n=new Map;return Array.from(e).forEach((l,i)=>{n.set(l,s[i])}),({layerType:l})=>{const i=l??"FeatureLayer";return n.get(i)}}export{Y as load};
