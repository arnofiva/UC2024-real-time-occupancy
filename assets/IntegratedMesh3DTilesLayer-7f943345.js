import{ar as z,as as N,at as j,h6 as U,au as V,ho as X,hp as k,bx as w,bw as A,hq as $,cP as u,dz as F,eQ as h,dA as _,eH as M,gA as E,hr as L,hs as I,ht as S,hu as d,aw as K,ax as T,ay as P,hv as R,hw as W,aK as D,hx as q,aj as m,ak as f,hy as G,aE as O,am as H,aF as Q,cM as g}from"./index-2e5346e2.js";let p=class extends z(N(j(U(V(X(k(Q))))))){constructor(a){super(a),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new w({wkid:4326,vcsWkid:115700}),this.fullExtent=new A(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(a){this._set("elevationInfo",a),this._validateElevationInfo()}_verifyArray(a,i){if(!Array.isArray(a)||a.length<i)return!1;for(const o of a)if(typeof o!="number")return!1;return!0}_initFullExtent(a){const i=a.root?.boundingVolume;if(!i)return;if(i.box){const t=i?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=a.root?.transform,x=g();if(i.region&&this._verifyArray(i.region,6)){const t=i.region,l=$(t[0]),n=$(t[1]),s=t[4],r=$(t[2]),e=$(t[3]),y=t[5];this.fullExtent=new A({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:y,spatialReference:this.spatialReference})}else if(i.sphere&&this._verifyArray(i.sphere,4)){const t=i.sphere,l=u(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=g();F(s,l,u(n,n,n));const r=g();if(h(r,l,u(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(x,s,v),M(s,x),_(x,r,v),M(r,x)}E(s,L,0,s,w.WGS84,0,1),E(r,L,0,r,w.WGS84,0,1);const e=g(),y=g();I(e,s,r),S(y,s,r),this.fullExtent=new A({xmin:e[0],ymin:e[1],zmin:e[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}else if(i.box&&this._verifyArray(i.box,12)){const t=i.box,l=u(t[0],t[1],t[2]),n=u(t[3],t[4],t[5]),s=u(t[6],t[7],t[8]),r=u(t[9],t[10],t[11]),e=[];for(let c=0;c<8;++c)e.push(g());if(h(e[0],l,n),h(e[0],e[0],s),h(e[0],e[0],r),d(e[1],l,n),h(e[1],e[1],s),h(e[1],e[1],r),h(e[2],l,n),d(e[2],e[2],s),h(e[2],e[2],r),d(e[3],l,n),d(e[3],e[3],s),h(e[3],e[3],r),h(e[4],l,n),h(e[4],e[4],s),d(e[4],e[4],r),d(e[5],l,n),h(e[5],e[5],s),d(e[5],e[5],r),h(e[6],l,n),d(e[6],e[6],s),d(e[6],e[6],r),d(e[7],l,n),d(e[7],e[7],s),d(e[7],e[7],r),o&&this._verifyArray(o,16)){const c=o;for(let b=0;b<8;++b)_(e[b],e[b],c)}const y=u(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=u(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let c=0;c<8;++c)E(e[c],L,0,e[c],w.WGS84,0,1),I(v,v,e[c]),S(y,y,e[c]);this.fullExtent=new A({xmin:v[0],ymin:v[1],zmin:v[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}}async load(a){return this.addResolvingPromise(this._doLoad(a)),this}async _doLoad(a){const i=a!=null?a.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new K("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},a)}catch(o){T(o)}this.url&&await P(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(x=>{this._initFullExtent(x.data)},x=>{T(x)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const a=this.elevationInfo,i="Integrated mesh 3d tiles layers";R(D.getLogger(this),W(i,"absolute-height",a)),R(D.getLogger(this),q(i,a))}};m([f({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),m([f({type:w})],p.prototype,"spatialReference",void 0),m([f({type:A})],p.prototype,"fullExtent",void 0),m([f(G)],p.prototype,"elevationInfo",null),m([f({type:["show","hide"]})],p.prototype,"listMode",void 0),m([f(O)],p.prototype,"url",void 0),m([f({readOnly:!0})],p.prototype,"type",void 0),m([f({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),m([f({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),m([f({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=m([H("esri.layers.IntegratedMesh3DTilesLayer")],p);const B=p;export{B as default};
