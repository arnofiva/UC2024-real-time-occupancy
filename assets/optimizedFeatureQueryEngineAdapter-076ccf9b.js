import{el as G,em as O}from"./index-6a39f5fd.js";function _(t,e){return t?e?4:3:e?3:2}function P(t,e,n,s,c){if(!e?.lengths.length)return null;const l=c?.originPosition==="upperLeft"?-1:1;t.lengths.length&&(t.lengths.length=0),t.coords.length&&(t.coords.length=0);const r=t.coords,u=[],o=n?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:g,coords:T}=e,d=_(n,s);let E=0;for(const I of g){const N=p(o,T,E,I,n,s,l);N&&u.push(N),E+=I*d}if(u.sort((I,N)=>{let f=l*I[2]-l*N[2];return f===0&&n&&(f=I[4]-N[4]),f}),u.length){let I=6*u[0][2];r[0]=u[0][0]/I,r[1]=u[0][1]/I,n&&(I=6*u[0][4],r[2]=I!==0?u[0][3]/I:0),(r[0]<o[0]||r[0]>o[1]||r[1]<o[2]||r[1]>o[3]||n&&(r[2]<o[4]||r[2]>o[5]))&&(r.length=0)}if(!r.length){const I=e.lengths[0]?S(T,0,g[0],n,s):null;if(!I)return null;r[0]=I[0],r[1]=I[1],n&&I.length>2&&(r[2]=I[2])}return t}function p(t,e,n,s,c,l,r=1){const u=_(c,l);let o=n,g=n+u,T=0,d=0,E=0,I=0,N=0;for(let Y=0,F=s-1;Y<F;Y++,o+=u,g+=u){const h=e[o],m=e[o+1],i=e[o+2],b=e[g],a=e[g+1],A=e[g+2];let V=h*a-b*m;I+=V,T+=(h+b)*V,d+=(m+a)*V,c&&(V=h*A-b*i,E+=(i+A)*V,N+=V),h<t[0]&&(t[0]=h),h>t[1]&&(t[1]=h),m<t[2]&&(t[2]=m),m>t[3]&&(t[3]=m),c&&(i<t[4]&&(t[4]=i),i>t[5]&&(t[5]=i))}if(I*r>0&&(I*=-1),N*r>0&&(N*=-1),!I)return null;const f=[T,d,.5*I];return c&&(f[3]=E,f[4]=.5*N),f}function S(t,e,n,s,c){const l=_(s,c);let r=e,u=e+l,o=0,g=0,T=0,d=0;for(let E=0,I=n-1;E<I;E++,r+=l,u+=l){const N=t[r],f=t[r+1],Y=t[r+2],F=t[u],h=t[u+1],m=t[u+2],i=s?j(N,f,Y,F,h,m):y(N,f,F,h);if(i)if(o+=i,s){const b=$(N,f,Y,F,h,m);g+=i*b[0],T+=i*b[1],d+=i*b[2]}else{const b=M(N,f,F,h);g+=i*b[0],T+=i*b[1]}}return o>0?s?[g/o,T/o,d/o]:[g/o,T/o]:n>0?s?[t[e],t[e+1],t[e+2]]:[t[e],t[e+1]]:null}function y(t,e,n,s){const c=n-t,l=s-e;return Math.sqrt(c*c+l*l)}function j(t,e,n,s,c,l){const r=s-t,u=c-e,o=l-n;return Math.sqrt(r*r+u*u+o*o)}function M(t,e,n,s){return[t+.5*(n-t),e+.5*(s-e)]}function $(t,e,n,s,c,l){return[t+.5*(s-t),e+.5*(c-e),n+.5*(l-n)]}const w={getObjectId:t=>t.objectId,getAttributes:t=>t.attributes,getAttribute:(t,e)=>t.attributes[e],cloneWithGeometry:(t,e)=>new G(e,t.attributes,null,t.objectId),getGeometry:t=>t.geometry,getCentroid:(t,e)=>(t.centroid==null&&(t.centroid=P(new O,t.geometry,e.hasZ,e.hasM)),t.centroid)};export{P as n,w as o};
